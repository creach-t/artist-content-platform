version: '3.8'

services:
  nextjs-app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/artist_platform_dev
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=dev-secret-key-change-in-production
      - REDIS_URL=redis://redis:6379
      - UPLOADTHING_SECRET=dev_uploadthing_secret
      - UPLOADTHING_APP_ID=dev_uploadthing_app_id
      - INSTAGRAM_CLIENT_ID=your_instagram_client_id
      - INSTAGRAM_CLIENT_SECRET=your_instagram_client_secret
      - PINTEREST_CLIENT_ID=your_pinterest_client_id
      - PINTEREST_CLIENT_SECRET=your_pinterest_client_secret
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - app-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=artist_platform_dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - app-network
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin123
    command: server /data --console-address ":9001"
    volumes:
      - minio_dev_data:/data
    networks:
      - app-network
    restart: unless-stopped

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - app-network

volumes:
  postgres_dev_data:
  redis_dev_data:
  minio_dev_data:

networks:
  app-network:
    driver: bridge